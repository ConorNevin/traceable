---
version: 2.1

executors:
  golang:
    docker:
      - image: cimg/go:1.17

orbs:
  go: circleci/go@1.7.0

commands:
  go-install-deps:
    description: Save the go mod & build cache, and install Go tools
    steps:
      - go-cache-restore
      - go/mod-download

  go-install-tools:
    description: Install a specific Golang dev tool
    parameters:
      tool:
        type: string
        default: '"'  # matches everything by default
      args:
        type: string
        default: ''
    steps:
      - run: |
          cd ~/project
          cat tools.go \
            | grep "<< parameters.tool >>" \
            | grep _ \
            | awk -F'"' '{print $2}' \
            | xargs -tI % go install << parameters.args >> %

  go-cache-restore:
    description: Restore the go mod & build cache.
    steps:
      - restore_cache:
          keys:
            - v6-gosrc-{{ .Branch }}-{{ checksum "go.sum" }}-{{ .Environment.CIRCLE_JOB }}
            - v6-gosrc-{{ .Branch }}-{{ checksum "go.sum" }}-
            - v6-gosrc-{{ .Branch }}-
            - v6-gosrc-main-
          name: Restoring Source Cache
      - restore_cache:
          keys:
            - v6-gobin-{{ arch }}-{{ .Branch }}-{{ checksum "go.sum" }}-{{ .Environment.CIRCLE_JOB }}
            - v6-gobin-{{ arch }}-{{ .Branch }}-{{ checksum "go.sum" }}-
            - v6-gobin-{{ arch }}-{{ .Branch }}-
            - v6-gobin-{{ arch }}-main-
          name: Restoring Build Cache

  go-cache-save:
    description: Save the go mod & build cache.
    steps:
      - save_cache:
          key: v6-gosrc-{{ .Branch }}-{{ checksum "go.sum" }}-{{ .Environment.CIRCLE_JOB }}
          name: Saving Source Cache
          paths:
            - /home/circleci/go/pkg/mod
      - save_cache:
          key: v6-gobin-{{ arch }}-{{ .Branch }}-{{ checksum "go.sum" }}-{{ .Environment.CIRCLE_JOB }}
          name: Saving Build Cache
          paths:
            - /home/circleci/.cache/go-build

jobs:
  lint:
    working_directory: ~/project
    executor:
      name: golang
    steps:
      - checkout:
          path: ~/project
      - run: sudo apt-get update && sudo apt install jq
      - go-install-deps
      - run: go mod verify
      - run: go mod tidy
      - run:
          name: Check Modules
          command: |
            if [ ! -z "$(git status --porcelain)" ]; then
            git status
            echo
            echo -e '\033[1;93m!!! "go mod verify && go mod tidy" resulted in changes. Please run those commands locally and commit the changes.\e[0m'
            echo
            exit 1
            fi
      - run: go fmt ./...
      - run:
          name: Check Generated Code
          command: |
            if [ ! -z "$(git status --porcelain)" ]; then
            git status
            echo
            echo -e '\033[1;93m!!! "go fmt ./..." resulted in changes. Please run it locally and commit the changes.\e[0m'
            echo
            exit 1
            fi

  test:
    working_directory: ~/project
    parameters:
      version:
        type: string
    docker:
      - image: cimg/go:<< parameters.version >>
    steps:
      - checkout:
          path: ~/project
      - go-install-deps
      - go-install-tools:
          tool: goveralls
      - go-install-tools:
          tool: go-junit-report
      - run:
          name: go test
          command: |
            go test -v -coverprofile=c.out ./... 2>&1 | go-junit-report > report.xml
      - when:
          condition:
            equal: ["1.17", << parameters.version >>]
          steps:
          - run:
              name: coverage/upload
              command: |
                goveralls  -coverprofile=c.out -service=circleci
      - store_test_results:
          path: report.xml
      - go-cache-save

  test-generation:
    working_directory: ~/project
    executor:
      name: golang
    steps:
      - checkout:
          path: ~/project
      - go-install-deps
      - run:
          name: build binary
          command: make
      - run:
          name: regenerate examples
          command: go generate ./internal/tests/...
      - run:
          name: check generated code
          command: |
            if [ ! -z "$(git status --porcelain)" ]; then
            git status
            echo
            echo -e '\033[1;93m!!! "go generate ./internal/tests/..." resulted in changes. Please run it locally and commit the changes.\e[0m'
            echo
            exit 1
            fi

  release:
      docker:
        - image: cimg/go:1.17
      steps:
        - checkout
        - run: curl -sL https://git.io/goreleaser | bash

workflows:
  version: 2
  build:
    jobs:
      - lint
      - test:
          matrix:
            parameters:
              version: ["1.17", "1.16", "1.15", "1.14"]
      - test-generation:
          requires:
          - test
      - release:
          # Only run this job on git tag pushes
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/

