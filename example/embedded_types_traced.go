// Code generated by "traceable -type Embedded -output embedded_types_traced.go"; DO NOT EDIT.

package example

import (
	"context"
	"github.com/opentracing/opentracing-go"
	"io"
)

// TracedEmbedded is a traced implementation of Embedded
type TracedEmbedded struct {
	x Embedded
}

func (t *TracedEmbedded) FunctionOne(a0 context.Context, a1 func(context.Context, io.Reader) error) error {
	span, a0 := opentracing.StartSpanFromContext(a0, "Embedded.FunctionOne")
	defer func() {
		span.Finish()
	}()
	return t.x.FunctionOne(a0, a1)
}

func (t *TracedEmbedded) FunctionTwo(a0 context.Context, a1 io.Writer) error {
	span, a0 := opentracing.StartSpanFromContext(a0, "Embedded.FunctionTwo")
	defer func() {
		span.Finish()
	}()
	return t.x.FunctionTwo(a0, a1)
}
