// Code generated by "traceable -type Searcher -output searcher_traced.go"; DO NOT EDIT.

package example

import (
	"context"
	"github.com/opentracing/opentracing-go"
)

// TracedSearcher is a traced implementation of Searcher
type TracedSearcher struct {
	x Searcher
}

func (t *TracedSearcher) Search(a0 context.Context, a1 string) error {
	span, a0 := opentracing.StartSpanFromContext(a0, "Searcher.Search")
	defer func() {
		span.Finish()
	}()
	return t.x.Search(a0, a1)
}

func (t *TracedSearcher) SearchAll(a0 context.Context, a1 ...string) (chan<- string, error) {
	span, a0 := opentracing.StartSpanFromContext(a0, "Searcher.SearchAll")
	defer func() {
		span.Finish()
	}()
	return t.x.SearchAll(a0, a1...)
}

func (t *TracedSearcher) StoreAll(a0 context.Context, a1 <-chan string) error {
	span, a0 := opentracing.StartSpanFromContext(a0, "Searcher.StoreAll")
	defer func() {
		span.Finish()
	}()
	return t.x.StoreAll(a0, a1)
}
