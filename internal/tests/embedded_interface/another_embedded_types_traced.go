// Code generated by "traceable -types AnotherEmbedded -output another_embedded_types_traced.go"; DO NOT EDIT.

package embedded_interface

import (
	"context"

	"github.com/ConorNevin/traceable/internal/tests/embedded_interface/nested"
	"github.com/opentracing/opentracing-go"
)

// TracedAnotherEmbedded is a traced implementation of AnotherEmbedded
type TracedAnotherEmbedded struct {
	x AnotherEmbedded
}

func (t *TracedAnotherEmbedded) FauxDu(a0 context.Context) (string, func() error, error) {
	span, a0 := opentracing.StartSpanFromContext(a0, "AnotherEmbedded.FauxDu")
	defer func() {
		span.Finish()
	}()
	return t.x.FauxDu(a0)
}

func (t *TracedAnotherEmbedded) Foo(a0 context.Context) nested.FauxReturn {
	span, a0 := opentracing.StartSpanFromContext(a0, "AnotherEmbedded.Foo")
	defer func() {
		span.Finish()
	}()
	return t.x.Foo(a0)
}
